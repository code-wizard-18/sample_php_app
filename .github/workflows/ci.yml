name: PHP Apache Docker CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # GitHub-hosted Ubuntu runner

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 8080:80  # Expose port 8080 on the container to host

    steps:
      # Step 1: Checkout the repository code
      - name: Check out repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Step 4: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      # Step 5: Build and start the Docker container
      - name: Build and start Docker container
        run: |
          docker-compose -f docker-compose.yml up -d --build

      # Step 6: Wait for Apache to start
      - name: Wait for Apache to start
        run: |
          sleep 10  # wait for Apache to start

      # Step 7: Test the PHP Application
      - name: Test PHP Application
        run: |
          curl -s http://localhost:8080 || exit 1  # Test if the PHP site is available

      # Step 8: Tear down containers after the test
      - name: Tear down containers
        run: |
          docker-compose down
